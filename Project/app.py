import streamlit as st
import requests

BASE_URL = "http://127.0.0.1:5000"

def fetch_news(company_name):
    response = requests.get(f"{BASE_URL}/get_news?company={company_name}")
    if response.status_code == 200:
        data = response.json()
        return data if data else None
    return None

def analyze_sentiment(news_data):
    response = requests.post(f"{BASE_URL}/analyze_sentiment", json=news_data)
    return response.json() if response.status_code == 200 else None

def convert_to_speech(text):
    response = requests.post(f"{BASE_URL}/generate_tts", json={"text": text})
    return response.content if response.status_code == 200 else None

# Function to translate English sentiment summary to Hindi
def translate_to_hindi(english_text):
    hindi_translations = {
        "GoogleтАЩs latest news coverage is balanced, with positive sentiment around AI innovations and negative sentiment around regulatory challenges.": 
        "Google рдХреА рдирд╡реАрдирддрдо рд╕рдорд╛рдЪрд╛рд░ рдХрд╡рд░реЗрдЬ рд╕рдВрддреБрд▓рд┐рдд рд╣реИ, рдЬрд┐рд╕рдореЗрдВ AI рдирд╡рд╛рдЪрд╛рд░реЛрдВ рдХреЗ рдкреНрд░рддрд┐ рд╕рдХрд╛рд░рд╛рддреНрдордХ рднрд╛рд╡рдирд╛ рдФрд░ рдирд┐рдпрд╛рдордХ рдЪреБрдиреМрддрд┐рдпреЛрдВ рдХреЗ рдкреНрд░рддрд┐ рдирдХрд╛рд░рд╛рддреНрдордХ рднрд╛рд╡рдирд╛ рд╢рд╛рдорд┐рд▓ рд╣реИред",
        
        "No summary available": 
        "рдХреЛрдИ рд╕рд╛рд░рд╛рдВрд╢ рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИред"
    }
    return hindi_translations.get(english_text, "рдЕрдиреБрд╡рд╛рдж рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИред")

# Streamlit UI
st.title("ЁЯУ░ News Summarization and Sentiment Analysis")
company = st.text_input("тЬНя╕П Enter Company Name:")

if st.button("ЁЯУК Fetch and Analyze News"):
    if company:
        with st.spinner("ЁЯФД Fetching news..."):
            news_data = fetch_news(company)
            if not news_data or "error" in news_data[0]:
                st.error("тЭМ No news articles found. Try another company.")
                st.stop()
            st.subheader("ЁЯУ░ News Articles:")
            st.json(news_data)

        with st.spinner("ЁЯза Performing Sentiment Analysis..."):
            sentiment_results = analyze_sentiment(news_data)
            if not sentiment_results or "articles" not in sentiment_results:
                st.error("тЭМ Sentiment analysis failed.")
                st.stop()

            # Extract the English sentiment summary
            english_summary = sentiment_results.get("final_summary", "No summary available")
            hindi_summary = translate_to_hindi(english_summary)

            st.subheader("ЁЯУИ Sentiment Analysis Result:")
            st.json(sentiment_results)

            # Display both English and Hindi summaries
            st.markdown(f"**ЁЯУЭ English Summary:** {english_summary}")
            st.markdown(f"**ЁЯМН Hindi Summary:** {hindi_summary}")

        with st.spinner("ЁЯФК Generating Text-to-Speech in Hindi..."):
            speech_audio = convert_to_speech(hindi_summary)
            if speech_audio:
                st.success("тЬЕ Hindi speech generated successfully!")
                st.audio(speech_audio, format='audio/mp3')
            else:
                st.error("тЭМ Failed to generate Hindi speech.")
    else:
        st.error("тЪая╕П Please enter a company name.")
